name: Tests

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
    paths:
      # Any change to a PHP file should run checks.
      - '**.php'
      # These files configure Composer. Changes could affect the outcome.
      - 'composer.*'
      # Changes to workflow files should always verify all workflows are successful.
      - '.github/workflows/*.yml'
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  # Runs PHPUnit testing.
  #
  # Violations are reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up PHP.
  # - Logs debug information.
  # - Installs Composer dependencies (use cache if possible).
  # - Runs PHPUnit on the full codebase.
  phpunit:
    name: Unit tests (PHP ${{ matrix.php-versions }} | WP ${{ matrix.wp-versions }})
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: password
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4', '8.0', '8.1', '8.2', '8.3'] # 7.4 is the minimum supported version.
        wp-version: ['4.9', '5.0', '5.1', '5.2', '5.3', '5.4', '5.5', '5.6', '5.7', '5.8', '5.9', '6.0', '6.1', '6.2', '6.3', '6.4', '6.5', 'latest']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@2.31.0
        with:
          php-version: ${{ matrix.php-versions }}
          wp-version: ${{ matrix.wp-versions }}
          coverage: none
        env:
          fail-fast: false

      - name: Log debug information
        run: |
          php --version
          composer --version

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Install WordPress test setup
        run: bash bin/install-wp-tests.sh wordpress root password 127.0.0.1:${{ job.services.mysql.ports[3306] }} ${{ matrix.wp-version }}

      - name: Run PHPUnit tests (PHP ${{ matrix.php-versions }})
        run: composer exec -- phpunit
